services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - ids-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    networks:
      - ids-network
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1

  kafkahq:
    image: tchiotludo/kafkahq
    hostname: kafkahq
    container_name: kafkahq
    ports:
      - "8082:8080"
    networks:
      - ids-network
    depends_on:
      - kafka
    environment:
      KAFKAHQ_CONFIGURATION: |
        kafkahq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"

  kafka-specs:
    build: kafka-specs/
    container_name: kafka-specs
    volumes:
      - ${PWD}/kafka-specs/kafka-stack-spec.yml:/kafka-stack-spec.yml
    depends_on:
      - kafka
    command:
      - kafka:9092
    environment:
      - KAFKA_SPECS_YAML=/kafka-stack-spec.yml
    networks:
      - ids-network

  jobmanager:
    image: flink:1.18.1-java11
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - "8084:8082"
    networks:
      - ids-network
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        jobmanager.memory.process.size: 2048m
        rest.address: jobmanager
        rest.port: 8082

  taskmanager:
    image: flink:1.18.1-java11
    container_name: taskmanager
    hostname: taskmanager
    depends_on:
      - jobmanager
    networks:
      - ids-network
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.memory.process.size: 2048m
        taskmanager.numberOfTaskSlots: 6

  netlog:
    image: recedivies09/netlog-new
    container_name: netlog
    hostname: netlog
    entrypoint:
      [
        "/usr/local/bin/spoofy",
        "-i",
        "/test.pcap",
        "-f",
        "tcp or udp",
        "--sender",
        "kafka",
        "--broker",
        "kafka:9092",
        "--topic",
        "network-traffic",
      ]
    depends_on:
      kafka-specs:
        condition: service_completed_successfully
    volumes:
      - /media/meervix/DATA/Projects/thesis/test.pcap:/test.pcap
    networks:
      - ids-network

networks:
  ids-network:
